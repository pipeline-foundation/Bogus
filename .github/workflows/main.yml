name: Bogus CI/CD

on: [push]

jobs:
  init:
    runs-on: windows-latest
    steps:

    ###############
    # Expose repo #
    ###############

    - name: Checkout repository
      uses: actions/checkout@v2 



    ################################
    # Init .NET and build solution #
    ################################

    - name: Restore dotnet tools    
      run: dotnet tool restore
    
    - name: Build fakes
      run: dotnet fake run Source\Builder\build.fsx target ci



    ############################
    # Upload packages artifact #
    ############################ 
    
    - uses: actions/upload-artifact@v2
      with:
        name: Package
        path: __package/



    ###################
    # Run Bogus tests #
    ###################

    - name: Run test's
      run: dotnet fake run Source\Builder\build.fsx target test
      


    ################################
    # Upload test results artifact #
    ################################
    
    - uses: actions/upload-artifact@v2
      with:
        name: TestResults
        path: __test/



  release:
    needs: init
    runs-on: ubuntu-latest
    steps:

    ###############
    # Expose repo #
    ###############

    - name: Checkout repository
      uses: actions/checkout@v2



    #####################
    # Download packages #
    #####################

    - uses: actions/download-artifact@v2 
      with:
        name: Package
        path: __package/



    #########################
    # Download test results #
    #########################

    - uses: actions/download-artifact@v2 
      with:
        name: TestResults
        path: __test/        



    ###########################
    # Create release sequence #
    ###########################

    - name: Bump version and push tag
      id: tag_generator
      uses: ChloePlanet/github-tag-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.tag_generator.outputs.new_tag }} 
        release_name: Release ${{ steps.tag_generator.outputs.new_tag }} 
        body: "[CHANGE LOG](HISTORY.md)"
        draft: false
        prerelease: false



    ####################################
    # Upload compile folder to release #
    ####################################

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: __package/Bogus.zip
        asset_name: Bogus.zip
        asset_content_type: application/zip



    ##########################################
    # Upload symbol nuget package to release #
    ##########################################

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: __package/Bogus.0.0.0-localbuild.snupkg
        asset_name: Bogus.${{ steps.tag_generator.outputs.new_tag }}-testonly.snupkg
        asset_content_type: application/snupkg



    ###################################
    # Upload nuget package to release #
    ###################################

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: __package/Bogus.0.0.0-localbuild.nupkg
        asset_name: Bogus.${{ steps.tag_generator.outputs.new_tag }}-testonly.nupkg
        asset_content_type: application/nupkg



    ##################################
    # Upload test results to release #
    ##################################

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: __test/results.xml
        asset_name: results.xml
        asset_content_type: application/xml