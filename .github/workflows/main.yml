name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest
    

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1


#    - name: Cache SonarCloud packages
#     uses: actions/cache@v1
#      with:
#        path: ~\sonar\cache
#        key: ${{ runner.os }}-sonar
#        restore-keys: ${{ runner.os }}-sonar
    
#    - name: Cache SonarCloud scanner
#      id: cache-sonar-scanner
#      uses: actions/cache@v1
#     with:
#      path: .\.sonar\scanner
#       key: ${{ runner.os }}-sonar-scanner
#       restore-keys: ${{ runner.os }}-sonar-scanner
     
#    - name: Install SonarCloud scanner
#      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
#      shell: powershell
#      run: |
#      New-Item -Path .\.sonar\scanner -ItemType Directory
#      dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    
 #   - name: SonarScanner begin
 #     env:
 #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
 #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
 #     shell: powershell
 #     run: .\.sonar\scanner\dotnet-sonarscanner begin /k:"szlatkow_Bogus" /o:"szlatkow" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
    
 #   - name: Upload Artifacts on root folder
 #     uses: actions/upload-artifact@v2
 #     with:
 #       name: Source
 #       path: ./

    - name: Restore dotnet tools    
      run: dotnet tool restore
    
    - name: Build fakes
      run: dotnet fake run Source\Builder\build.fsx target ci
      env: 
        FORCE_VERSION: 4.0.0
 
#    - name: Run test's
#      run: dotnet test Source\Bogus.Tests\
#    
#    - name: Perform CodeQL Analysis
#      uses: github/codeql-action/analyze@v1
    
 
#    - name: SonarScanner end
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#      run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
         
         
#    - name: publish on version change
#      id: publish_nuget
#      uses: rohith/publish-nuget@v2
#      continue-on-error: true
#      with:
#          PROJECT_FILE_PATH: 'Source/Bogus/Bogus.csproj'
#          TAG_COMMIT: true
#          NUGET_KEY: ${{secrets.API_KEY}}
#          PACKAGE_NAME: Fake-package-01
    
    - name: Upload Artifacts on packages
      uses: actions/upload-artifact@v2
      with:
        name: Packages
        path: __package/    
    
    - name: Create Release
      id: create_release1
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release1.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./__package
        asset_name: __package
