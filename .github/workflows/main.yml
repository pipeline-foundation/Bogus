name: Bogus CI/CD Pipeline

on: [push, pull_request]

jobs:
  ci:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2
        with: 
          fetch-depth: 50 

      - name: Activate TestSpace tool
        id: testspace_tool
        uses: testspace-com/setup-testspace@v1 
        with: 
          domain: ${{ github.repository_owner }} 

      - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: Bump release version and create release tag
        id: tag_generator
        uses: mathieudutour/github-tag-action@v5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false

      - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: Write to tag.txt
        run: '"${{ steps.tag_generator.outputs.new_version }}" | Out-File -FilePath "tag.txt"'

      - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: Upload tag.txt
        uses: actions/upload-artifact@v2
        with:
          name: TagText
          path: tag.txt

      # - name: Initialize CodeQL
      #   id: init_codeql
      #   uses: github/codeql-action/init@v1

      - if: github.repository_owner == github.actor
        name: Cache SonarCloud packages
        id: cache_sonar_packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar 

      - if: github.repository_owner == github.actor
        name: Cache SonarCloud scanner
        id: cache_sonar_scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - if: github.repository_owner == github.actor && steps.cache_sonar_scanner.outputs.cache-hit != 'true'
        name: Install SonarCloud scanner
        id: install_sonar_scanner
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - if: github.repository_owner == github.actor 
        name: Lowercase string generator
        id: lowercase_string_gen
        run: |
          $LOWERCASE_OWNER = "${{ github.repository_owner }}".ToLower()
          echo "::set-output name=owner_name::$LOWERCASE_OWNER"

      - if: github.repository_owner == github.actor
        name: Initialize SonarCloud scanner
        id: init_sonar_scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ github.repository_owner }}_${{ github.event.repository.name }}" /o:"${{ steps.lowercase_string_gen.outputs.owner_name }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

      - name: Install .NET dependencies
        id: install_dotnet_dependencies
        run: dotnet tool restore

      - name: Build project
        id: build_project
        run: dotnet fake run Source\Builder\build.fsx target ci
        env:
          FORCE_VERSION: ${{ steps.tag_generator.outputs.new_version }}

      - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: Upload package artifact
        id: up_package_artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Package
          path: __package/

      - name: Run project tests
        id: run_project_tests
        run: dotnet fake run Source\Builder\build.fsx target test

      - name: Push result to Testspace server 
        id: push_to_testspace
        run: | 
          testspace __test/results.xml  
        if: always() 

      - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: Upload package artifact
        id: up_test_results_artifacts
        uses: actions/upload-artifact@v2
        with:
          name: TestResults
          path: __test/

      # - name: Perform CodeQL Analysis
      #   id: codeql_analysis
      #   uses: github/codeql-action/analyze@v1

      - if: github.repository_owner == github.actor     
        name: Send SonarCloud results
        id: send_sonar_results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  cd:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: ci
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2

      - name: Download and extract tag.txt artifact
        id: dl_tagtxt_artifact
        uses: actions/download-artifact@v2
        with:
          name: TagText
          path: ./

      - name: Assign tag.txt content to output
        id: tag_text 
        run: |
          $file_text = Get-Content "tag.txt"
          echo "::set-output name=new_version::$file_text"
          $tag_text = "v" + $file_text
          echo "::set-output name=new_tag::$tag_text"  

      - name: Download and extract package artifact
        id: dl_package_artifact
        uses: actions/download-artifact@v2
        with:
          name: Package
          path: __package/

      - name: Download and extract test results artifact
        id: dl_test_results_artifact
        uses: actions/download-artifact@v2
        with:
          name: TestResults
          path: __test/          

      # - name: Publish *.nupkg on NuGet
      #   id: publish_nuget
      #   uses: rohith/publish-nuget@v2
      #   continue-on-error: true
      #   with:
      #       PROJECT_FILE_PATH: 'Source/Bogus/Bogus.csproj'
      #       TAG_COMMIT: true
      #       NUGET_KEY: ${{secrets.API_KEY}}
      #       PACKAGE_NAME: Fake-package-01

      - name: Create and publish release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_text.outputs.new_tag }}
          release_name: Release ${{ steps.tag_text.outputs.new_tag }}
          body: "[CHANGE LOG](HISTORY.md)"

      - name: Upload Bogus.zip as release asset
        id: upload_bogus_zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: __package/Bogus.zip
          asset_name: Bogus.zip
          asset_content_type: application/zip

      - name: Upload Bogus.snupkg as release asset
        id: upload_bogus_snupkg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: __package/Bogus.${{ steps.tag_text.outputs.new_version }}.snupkg
          asset_name: Bogus.${{ steps.tag_text.outputs.new_version }}.snupkg
          asset_content_type: application/snupkg

      - name: Upload Bogus.nupkg as release asset
        id: upload_bogus_nupkg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: __package/Bogus.${{ steps.tag_text.outputs.new_version }}.nupkg
          asset_name: Bogus.${{ steps.tag_text.outputs.new_version }}.nupkg
          asset_content_type: application/nupkg

      - name: Upload internal test results as release asset
        id: upload_internal_test_results
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: __test/results.xml
          asset_name: results.xml
          asset_content_type: application/xml
