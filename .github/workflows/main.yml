name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
  
 
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
    
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
       path: .\.sonar\scanner
       key: ${{ runner.os }}-sonar-scanner
       restore-keys: ${{ runner.os }}-sonar-scanner
     
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    
    - name: SonarScanner begin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: .\.sonar\scanner\dotnet-sonarscanner begin /k:"szlatkow_Bogus" /o:"szlatkow" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

    - name: Restore dotnet tools    
      run: dotnet tool restore
    
    - name: Build fakes
      run: dotnet fake run Source\Builder\build.fsx target ci
      env: 
        FORCE_VERSION: 4.0.0
   
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

    - name: SonarScanner end
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
         
         
#    - name: publish on version change
#      id: publish_nuget
#      uses: rohith/publish-nuget@v2
#      with:
#          PROJECT_FILE_PATH: /Bogus
#          TAG_COMMIT: true
#          NUGET_KEY: ${{secrets.API_KEY}}

    - name: Publish to Github packages
      uses: tanaka-takayoshi/nuget-publish-to-github-packages-action@v2.1
      with:
        nupkg-path:  './__package/*.nupkg'
        repo-owner:  'szlatkow'
        gh-user:  'szlatkow'
        token:  ${{ secrets.API_KEY}}
